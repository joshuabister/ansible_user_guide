---
- name: Generate Password
  password:
    encrypt: "{{ password_encrypt_scheme | default('sha-1') }}"
    length: "{{ password_length }}"
  # the password is stored in this variable
  register: generated_password
  # This means that the Generate Password task will run if the password_to_be_set variable is none
  # and set_password is True
  when: 
    - password_to_be_set is None
    - set_password | bool

# I don't mind being verbose for clarity here! 
# The goal is uniformity so that we don't have to remember syntax for various commands.
#
# Name tasks clearly so you can call them directly when testing with the --start-at-task option.
# ex: ansible-playbook user_management --start-at-task "Perform User Management"
#
# Some ansible modules have many options.
# We can decide how we want our users of our roles interact with these modules.
# This allows us to standardize how tasks are performed for complex operations such as user onboarding.
# Below, we've selected a few options from the user module and we can filter out the others
- name: Perform User Management
  user:
    name: "{{ username }}" # if we just put the var, then it is expected to be defined
    comment: "{{ comment | default(none) }}" # default(none) means that argument is not included if no value is provided
    uid: "{{ uid | default(none) }}"
    group: "{{ primary_group | default(none) }}"
    groups: "{{ secondary_groups | default(none) }}"
    append: "{{ append_groups | default(true) }}"
    home: "{{ path_to_home | default(none)  }}"
    create_home: "{{ create_home | default(false) }}"
    generate_ssh_key: "{{ generate_ssh_key | default(false)}}"i
    shell: "{{ shell_path | default(none) }}"
    # We reference the password we set in the above task if the password_to_be_set variable is not set.
    # This shouldn't fail if we didnt want to generate a password, so we default to none
    password: "{{ password_to_be_set if password_to_be_set is true else generated_password._raw | default(none) }}"
    state: "{{ state | default('present') }}"
    remove: "{{ delete_user_folders | default(false) }}"
    force: "{{ force | default(false) }}"

...
  

